/**
 * @input A : Integer
 * 
 * @Output Integer array. You need to malloc memory for result array, and fill result's length in length_of_array
 */
int* getRow(int A, int *length_of_array) {
	// SAMPLE CODE
           
          *length_of_array = A+1; // length of result array
          int *result = (int *) malloc(*length_of_array * sizeof(int));
          result[0]=1;
          int t,n=A,k,j,i;
          long mult=1,mult2=1;
          if(A+1>1) result[1]=A;
          if((A+1)%2!=0) {
           for(i=0;i<=(*length_of_array/2);i++)
          {   if(i!=0)
              { 
               n=A;
              k=i;
              mult=1;mult2=1;
              if(k>(n-k))
               {for(j=k+1;j<=n;j++) mult*=j;}
              else { for(j=n-k+1;j<=n;j++) mult*=j;}
              for(j=k;j>0;j--) mult2*=j;
              result[i]=(int)(mult/mult2);
              result[A-i]=result[i];
              } 
              else {
                  result[i]=1;result[A-i]=1;
              }
          }
          }
          else
            {
                  for(i=0;i<(*length_of_array/2);i++)
          {    if(i!=0)
              { 
              n=A;
              k=i;
              mult=1;mult2=1;
              if(k>(n-k))
               {for(j=k+1;j<=n;j++) mult*=j;}
              else { for(j=n-k+1;j<=n;j++) mult*=j;}
              for(j=k;j>0;j--) mult2*=j;
              result[i]=(int)(mult/mult2);
              result[A-i]=result[i];
              }
              else
              {
                  result[i]=1;result[A-i]=1;
              }
          }
            }
          // DO STUFF HERE
          return result;
         
}
